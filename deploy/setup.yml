- hosts: project_server
  become: yes
  vars:
    project_dir: "/home/ubuntu/test-task-tg-profile"
    ssl_dir: "{{ project_dir }}/ssl"
    frontend_dir: "{{ project_dir }}/frontend"
    backend_dir: "{{ project_dir }}/backend"
    bot_dir: "{{ project_dir }}/bot"

  tasks:
    - name: Обновляем apt и ставим зависимости
      apt:
        update_cache: yes
        name:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - nginx
          - certbot
          - python3-certbot-nginx
          - openssl
        state: present

    - name: Устанавливаем Docker
      apt:
        name:
          - docker.io
          - docker-compose
        state: present

    - name: Клонируем проект
      git:
        repo: "git@github.com:Friedox/test-task-tg-profile.git"
        dest: "{{ project_dir }}"
        version: "main"
        force: yes
        accept_hostkey: yes
        key_file: "/root/.ssh/id_ed25519"

    - name: Копируем ENV файлы
      copy:
        src: ./envs/
        dest: "{{ project_dir }}/"
        mode: '0600'

    - name: Создаем папку для самоподписанных сертификатов
      file:
        path: "{{ ssl_dir }}"
        state: directory
        mode: '0755'

    - name: Генерим самоподписанные сертификаты для фронта
      command: >
        openssl req -x509 -nodes -days 365 -newkey rsa:2048
        -keyout {{ ssl_dir }}/frontend-selfsigned.key
        -out {{ ssl_dir }}/frontend-selfsigned.crt
        -subj "/C=US/ST=State/L=City/O=Company/CN={{ inventory_hostname }}"
      args:
        creates: "{{ ssl_dir }}/frontend-selfsigned.crt"

    - name: Копируем Nginx конфиг для фронта
      template:
        src: nginx-frontend.conf.j2
        dest: /etc/nginx/sites-available/frontend.conf

    - name: Включаем Nginx конфиг
      file:
        src: /etc/nginx/sites-available/frontend.conf
        dest: /etc/nginx/sites-enabled/frontend.conf
        state: link
        force: yes

    - name: Перезапускаем Nginx
      service:
        name: nginx
        state: restarted

    - name: Запускаем docker compose
      command: docker compose up -d --build
      args:
        chdir: "{{ project_dir }}"
