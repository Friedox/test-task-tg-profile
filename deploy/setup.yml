- hosts: project_server
  become: yes
  vars:
    domain_name: "friedox.online"
    email: "dvzvidrin48@gmail.com"
    project_dir: "/root/test-task-tg-profile"
    ssl_dir: "{{ project_dir }}/ssl"
    frontend_dir: "{{ project_dir }}/frontend"
    backend_dir: "{{ project_dir }}/backend"
    bot_dir: "{{ project_dir }}/bot"

  tasks:
    - name: Обновляем APT и ставим зависимости
      apt:
        update_cache: yes
        name:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - certbot
          - python3-certbot-nginx
          - openssl
        state: present

    - name: Добавляем Docker GPG ключ
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Добавляем Docker репозиторий
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable"
        state: present

    - name: Устанавливаем Docker и Docker Compose CLI (plugin)
      apt:
        update_cache: yes
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
        state: present

    - name: Убеждаемся, что Docker daemon запущен и в автозагрузке
      service:
        name: docker
        state: started
        enabled: true

    - name: Клонируем проект
      git:
        repo: "https://github.com/Friedox/test-task-tg-profile.git"
        dest: "{{ project_dir }}"
        version: "main"
        force: yes
        accept_hostkey: yes

    - name: Копируем backend .env
      copy:
        src: ../backend/.env
        dest: "{{ backend_dir }}/.env"
        mode: '0600'

    - name: Копируем frontend .env
      copy:
        src: ../frontend/.env
        dest: "{{ frontend_dir }}/.env"
        mode: '0600'

    - name: Копируем bot .env
      copy:
        src: ../bot/.env
        dest: "{{ bot_dir }}/.env"
        mode: '0600'

    - name: Копируем общий .env
      copy:
        src: ../.env
        dest: "{{ project_dir }}/.env"
        mode: '0600'

    - name: Получаем SSL сертификат от Let's Encrypt
      command: >
        certbot certonly --nginx -d {{ domain_name }} -d www.{{ domain_name }} --non-interactive --agree-tos -m {{ email }}
      args:
        creates: "/etc/letsencrypt/live/{{ domain_name }}/fullchain.pem"

    - name: Создаем симлинки на сертификаты для nginx
      file:
        src: "/etc/letsencrypt/live/{{ domain_name }}/{{ item }}"
        dest: "{{ ssl_dir }}/{{ item }}"
        state: link
        force: true
      with_items:
        - fullchain.pem
        - privkey.pem

    - name: Запускаем docker compose up -d --build
      command: docker compose up -d --build
      args:
        chdir: "{{ project_dir }}"
